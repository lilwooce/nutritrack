// app/generateMessage/route.ts

import { NextResponse } from 'next/server';
import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,  // Use the server-side environment variable for security
});

export async function POST(req: Request) {
  try {
    // Parse the JSON body
    const { calories, carbs, fat, protein } = await req.json();

    const prompt = `Here is the user's daily nutrition summary: Calories: ${calories} kcal, Carbs: ${carbs} g, Fat: ${fat} g, Protein: ${protein} g. Based on this data, generate a friendly message offering advice on their nutrition.`;
    console.log("Generated prompt:", prompt); // Log the prompt for debugging

    const response = await openai.chat.completions.create({
      model: 'gpt-4',
      messages: [
        { role: 'system', content: 'You are a nutrition assistant.' },
        { role: 'user', content: prompt },
      ],
      max_tokens: 100,
      temperature: 0.7,
    });

    // Return the message generated by GPT-4
    return NextResponse.json({ message: response.choices[0].message.content || "Keep it up! You're doing great!" }, { status: 200 });
  } catch (error) {
    console.error("Error generating message:", error);
    return NextResponse.json({ error: "Failed to generate message" }, { status: 500 });
  }
}
